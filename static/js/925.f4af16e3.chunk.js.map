{"version":3,"file":"static/js/925.f4af16e3.chunk.js","mappings":"uQAAA,IAAMA,EAAW,gCACXC,EAAU,mCAET,SAASC,IACd,OAAOC,MAAM,GAAD,OAAIH,EAAJ,oCAAwCC,IAC/CG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MAAK,SAAAC,GAAG,OAAIA,EAAIE,OAAR,GACd,CAEM,SAASC,EAAgBC,GAC9B,OAAON,MAAM,GAAD,OAAIH,EAAJ,gCAAoCC,EAApC,kBAAqDQ,IAC5DL,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MAAK,SAAAC,GAAG,OAAIA,EAAIE,OAAR,GACd,CAEM,SAASG,EAAgBC,GAC9B,OAAOR,MAAM,GAAD,OAAIH,EAAJ,kBAAsBW,EAAtB,oBAAyCV,IAClDG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACZ,CAEM,SAASM,EAAoBD,GAClC,OAAOR,MAAM,GAAD,OAAIH,EAAJ,kBAAsBW,EAAtB,4BAAiDV,IACxDG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACd,CAEM,SAASO,EAAuBF,GACrC,OAAOR,MAAM,GAAD,OAAIH,EAAJ,kBAAsBW,EAAtB,4BAAiDV,IACxDG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACd,C,8ECeD,UArC4B,WAC1B,IAAQK,GAAYG,EAAAA,EAAAA,MAAZH,QACR,GAAsDI,EAAAA,EAAAA,UAAS,MAA/D,eAAOC,EAAP,KAA4BC,EAA5B,KAYA,OAVAC,EAAAA,EAAAA,YAAU,YACRL,EAAAA,EAAAA,IAAuBF,GACpBP,MAAK,SAAAC,GACAA,EAAIc,eACNF,EAAuBZ,EAAIE,QAE9B,IACAa,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACV,IAECK,GAKH,+BACE,wBACGA,EAAoBQ,KAAI,SAAAC,GACvB,IAAQC,EAAwBD,EAAxBC,GAAIC,EAAoBF,EAApBE,OAAQC,EAAYH,EAAZG,QAEpB,OACE,2BACE,oCAAYD,MACZ,uBAAIC,MAFGF,EAIT,SAdD,6EAoBV,C","sources":["components/Api/API.js","components/MovieDetailsReviews/MovieDetailsReviews.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'fabdd94d4f0ea78505de1131093b2953';\n\nexport function getTrendingMovies() {\n  return fetch(`${BASE_URL}trending/all/day?api_key=${API_KEY}`)\n      .then(res => res.json())\n      .then(res => res.results);\n};\n\nexport function getSearchMovies(searchQuery) {\n  return fetch(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchQuery}`)\n      .then(res => res.json())\n      .then(res => res.results);\n};\n\nexport function getMovieDetails(movieId) {\n  return fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n    .then(res => res.json());\n};\n\nexport function getMovieDetailsCast(movieId) {\n  return fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\n      .then(res => res.json());\n};\n\nexport function getMovieDetailsReviews(movieId) {\n  return fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`)\n      .then(res => res.json());\n};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieDetailsReviews } from \"../Api/API\";\n\n\nconst MovieDetailsReviews = () => {\n  const { movieId } = useParams();\n  const [movieDetailsReviews, setMovieDetailsReviews] = useState(null);\n\n  useEffect(() => {\n    getMovieDetailsReviews(movieId)\n      .then(res => {\n        if (res.total_results) {\n          setMovieDetailsReviews(res.results); \n        }\n      })\n      .catch(error => console.log(error));\n  }, [movieId]);\n  \n  if (!movieDetailsReviews) {\n    return <p>Sorry, but we don't have any reviews on this movie</p>;\n  };\n\n  return (\n    <>\n      <ul>\n        {movieDetailsReviews.map(item => {\n          const { id, author, content } = item;\n          \n          return (\n            <li key={id}>\n              <p>Author: {author}</p>\n              <p>{content}</p>\n            </li>\n          )}\n        )}\n      </ul>\n    </>\n    \n  );\n};  \n\nexport default MovieDetailsReviews;"],"names":["BASE_URL","API_KEY","getTrendingMovies","fetch","then","res","json","results","getSearchMovies","searchQuery","getMovieDetails","movieId","getMovieDetailsCast","getMovieDetailsReviews","useParams","useState","movieDetailsReviews","setMovieDetailsReviews","useEffect","total_results","catch","error","console","log","map","item","id","author","content"],"sourceRoot":""}
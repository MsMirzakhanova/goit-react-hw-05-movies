{"version":3,"file":"static/js/884.a047bef3.chunk.js","mappings":"uQAAA,IAAMA,EAAW,gCACXC,EAAU,mCAET,SAASC,IACd,OAAOC,MAAM,GAAD,OAAIH,EAAJ,oCAAwCC,IAC/CG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MAAK,SAAAC,GAAG,OAAIA,EAAIE,OAAR,GACd,CAEM,SAASC,EAAgBC,GAC9B,OAAON,MAAM,GAAD,OAAIH,EAAJ,gCAAoCC,EAApC,kBAAqDQ,IAC5DL,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MAAK,SAAAC,GAAG,OAAIA,EAAIE,OAAR,GACd,CAEM,SAASG,EAAgBC,GAC9B,OAAOR,MAAM,GAAD,OAAIH,EAAJ,kBAAsBW,EAAtB,oBAAyCV,IAClDG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACZ,CAEM,SAASM,EAAoBD,GAClC,OAAOR,MAAM,GAAD,OAAIH,EAAJ,kBAAsBW,EAAtB,4BAAiDV,IACxDG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACd,CAEM,SAASO,EAAuBF,GACrC,OAAOR,MAAM,GAAD,OAAIH,EAAJ,kBAAsBW,EAAtB,4BAAiDV,IACxDG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACd,C,sFC2CD,UAjEsB,WACjB,IAAQK,GAAYG,EAAAA,EAAAA,MAAZH,QACFI,GAAWC,EAAAA,EAAAA,MAClB,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAgBF,IAdAC,EAAAA,EAAAA,YAAU,YACRV,EAAAA,EAAAA,IAAgBC,GACbP,MAAK,SAAAC,GACe,aAAfA,EAAIgB,OAKRF,EAAgBd,GAJdiB,QAAQC,IAAIlB,EAAImB,eAKnB,IACAC,OAAM,SAAAC,GAAK,OAAIJ,QAAQC,IAAIG,EAAhB,GACf,GAAE,CAACf,IAGCO,EAAL,CAIK,IAAQS,EAA2ET,EAA3ES,KAAMC,EAAqEV,EAArEU,MAAOC,EAA8DX,EAA9DW,aAAcC,EAAgDZ,EAAhDY,SAAUC,EAAsCb,EAAtCa,OAAQC,EAA8Bd,EAA9Bc,YAAaC,EAAiBf,EAAjBe,aACjEC,EAAc,IAAIC,KAAKN,GACzBO,EAAM,yCAAqCJ,GAM7C,OAJGA,IACHI,EAAS,uGAIL,iCACI,mBAAQC,QAAS,kBAAKtB,GAAU,EAAf,EAAjB,sBACN,8BACE,4BACE,gBAAMuB,IAAKF,EAAQG,IAAKX,GAASD,EAAMa,MAAM,MAAMC,OAAO,SAC1D,4BACE,0BAAKb,GAASD,EAAd,KAAsBO,EAAYQ,cAAlC,QACA,wCAAgBC,KAAKC,MAAqB,GAAfX,GAA3B,SACA,sCACA,uBAAIH,KACJ,oCACA,uBAAKC,GAAUA,EAAOc,OAAS,GAAKd,EAAOe,KAAI,SAAAC,GAAI,OAAIA,EAAKpB,IAAT,IAAeqB,KAAK,iBAI7E,gCACI,oDACA,2BACE,yBAAI,SAAC,KAAD,CAAMC,GAAG,OAAT,qBACJ,yBAAI,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAGR,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,UACA,8BACE,SAAC,KAAD,UAnCJ,CAwCL,C","sources":["components/Api/API.js","pages/MovieDetails.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'fabdd94d4f0ea78505de1131093b2953';\n\nexport function getTrendingMovies() {\n  return fetch(`${BASE_URL}trending/all/day?api_key=${API_KEY}`)\n      .then(res => res.json())\n      .then(res => res.results);\n};\n\nexport function getSearchMovies(searchQuery) {\n  return fetch(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchQuery}`)\n      .then(res => res.json())\n      .then(res => res.results);\n};\n\nexport function getMovieDetails(movieId) {\n  return fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n    .then(res => res.json());\n};\n\nexport function getMovieDetailsCast(movieId) {\n  return fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\n      .then(res => res.json());\n};\n\nexport function getMovieDetailsReviews(movieId) {\n  return fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`)\n      .then(res => res.json());\n};","\nimport { useState, useEffect, Suspense } from \"react\";\nimport { useParams, useNavigate, Link, Outlet } from \"react-router-dom\";\nimport { getMovieDetails } from \"../components/Api/API\";\n\n\n const MovieDetails = () => {\n     const { movieId } = useParams();\n     const navigate = useNavigate();\n    const [movieDetails, setMovieDetails] = useState(null);\n\n  useEffect(() => {\n    getMovieDetails(movieId)\n      .then(res => {\n        if (res.status !== \"Released\") {\n          console.log(res.status_message);\n          return;\n        }\n        \n        setMovieDetails(res);\n      })\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n\n  if (!movieDetails) {\n    return;\n     };\n     \n       const { name, title, release_date, overview, genres, poster_path, vote_average } = movieDetails;\n  const releaseYaer = new Date(release_date);\n  let poster = `https://image.tmdb.org/t/p/w500${poster_path}`;\n\n  if (!poster_path) {\n    poster = 'https://img.freepik.com/free-vector/coming-soon-display-background-with-focus-light_1017-33741.jpg';\n  };\n\n    return (\n        <>\n            <button onClick={()=> navigate(-1)}>go back</button>\n      <section>\n        <div>\n          <img  src={poster} alt={title || name} width=\"240\" height=\"320\"/>\n          <div>\n            <h2>{title || name} ({releaseYaer.getFullYear()})</h2>\n            <p>User score: {Math.round(vote_average * 10)} %</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h4>Genres</h4>\n            <p>{ genres && genres.length > 0 && genres.map(genr => genr.name).join(\", \")}</p>\n          </div>\n        </div>\n      </section>\n      <section>\n          <h3>Addination information</h3>\n          <ul>\n            <li><Link to=\"cast\">Cast</Link></li>\n            <li><Link to=\"reviews\">Reviews</Link></li>\n          </ul>\n        </section>\n        <Suspense fallback={<div>Loading...</div>}>\n        <section>\n          <Outlet/>\n        </section>\n      </Suspense>\n    </>\n  );\n};\n\n\n\nexport default MovieDetails;"],"names":["BASE_URL","API_KEY","getTrendingMovies","fetch","then","res","json","results","getSearchMovies","searchQuery","getMovieDetails","movieId","getMovieDetailsCast","getMovieDetailsReviews","useParams","navigate","useNavigate","useState","movieDetails","setMovieDetails","useEffect","status","console","log","status_message","catch","error","name","title","release_date","overview","genres","poster_path","vote_average","releaseYaer","Date","poster","onClick","src","alt","width","height","getFullYear","Math","round","length","map","genr","join","to","Suspense","fallback"],"sourceRoot":""}